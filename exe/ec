#!/usr/bin/env ruby

$LOAD_PATH.unshift './lib'

require 'everybody_codes'
require 'thor'
require 'fileutils'

class Cli < Thor
  DAYS = %w[
    one two three four five six seven eight nine ten
    eleven twelve thirteen fourteen fifteen sixteen
    seventeen eighteen nineteen twenty twentyone
    twentytwo twentythree twentyfour twentyfive
  ]

  desc 'exec DAY', 'Run day parts'
  option :year, type: :numeric, default: Time.now.year
  def exec(day, part = 'both')
    require "everybody_codes/#{folder}/day_#{day}"

    if part == 'both'
      puts "[*] Day #{day} first part => #{first}"
      puts "[*] Day #{day} second part => #{second}"
      puts "[*] Day #{day} third part => #{third}"
    else
      puts "[*] Day #{day} #{part} part => #{send part}"
    end
  end

  desc 'gen DAY', 'Generates stubs for a new day'
  option :year, type: :numeric, default: Time.now.year
  def gen(day)
    src_file = "lib/everybody_codes/#{folder}/day_#{day}.rb"

    template = <<~FILE
      def first
        "first part"
      end

      def second
        "second part"
      end

      def third
        "third part"
      end
    FILE

    FileUtils.mkdir_p "inputs/#{folder}"
    FileUtils.mkdir_p "lib/everybody_codes/#{folder}"
    File.write src_file, template
  end

  desc 'which', 'Check with exercirses are made'
  option :missing, type: :boolean, default: false
  def which
    Dir
      .children('lib/everybody_codes')
      .select { |dir| dir.start_with? 'y20' }
      .map { |dir| dir.gsub('y', '').to_i }
      .sort
      .each do |year|
        puts "Year #{year}"

        days = Dir
               .children("lib/everybody_codes/y#{year}")
               .select { |file| file.start_with? 'day_' }
               .map { |file| file.gsub('day_', '').gsub('.rb', '') }
               .sort { |a, b| DAYS.index(a) <=> DAYS.index(b) }

        days_to_show = options[:missing] ? (DAYS - days) : (DAYS & days)

        days_to_show.each do |file|
          puts " - #{file.gsub("day_", "").gsub ".rb", ""}"
        end
      end
  end

  no_commands do
    def folder
      "y#{options[:year]}"
    end
  end
end

Cli.start ARGV
